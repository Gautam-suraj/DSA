Given an array nums of size n, return the majority element.

The majority element is the element that appears more than ⌊n / 2⌋ times. You may assume that the majority element always exists in the array.






"*****SOLUTION OF THIS PROBLEM IS START FROM HERE ==> ****"


#include <stdio.h>

int majorityElement(int*, int );

int main() 
{
    int nums[] = {5, 6, 6, 6, 5, 1, 1, 1, 1};
    int numsSize = sizeof(nums) / sizeof(nums[0]);  
    int max = majorityElement(nums, numsSize);  
    printf("The majority element is: %d\n", max);  
    return 0;
}

int majorityElement(int* nums, int numsSize)
{
    int count, maxcount = 0, maxElement = 0;

    if (numsSize == 1) 
    {
        return nums[0];
    }

    for (int i = 0; i < numsSize; i++) 
    {
        count = 1; 
        for (int j = i + 1; j < numsSize; j++) 
        {
            if (nums[i] == nums[j]) 
            {
                count++;
            }
        }
        if (count > maxcount) 
        {
            maxcount = count;
            maxElement = nums[i];
        }
    }
    return maxElement;
}
