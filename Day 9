Given the head of a sorted linked list, delete all duplicates such that each element appears only once. Return the linked list sorted as well.




using System;

public class ListNode {
    public int val;
    public ListNode next;

    public ListNode(int val = 0, ListNode next = null) {
        this.val = val;
        this.next = next;
    }
}

public class Solution {
    public ListNode DeleteDuplicates(ListNode head) {
        ListNode current = head;

        while (current != null && current.next != null) {
            if (current.val == current.next.val) {
                current.next = current.next.next; 
            } else {
                current = current.next; 
            }
        }

        return head;
    }
}

class Program {
    static void PrintList(ListNode head) {
        while (head != null) {
            Console.Write(head.val + " -> ");
            head = head.next;
        }
        Console.WriteLine("NULL");
    }

    static void Main(string[] args) {
      ListNode head = new ListNode(1,
            new ListNode(1,
            new ListNode(2,
            new ListNode(3,
            new ListNode(3)))));

        Console.WriteLine("Original list:");
        PrintList(head);

        Solution solution = new Solution();
        head = solution.DeleteDuplicates(head);

        Console.WriteLine("Modified list:");
        PrintList(head);
    }
}
